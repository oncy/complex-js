{"version":3,"sources":["node_modules/browser-pack/_prelude.js","parser/index.js","src/cartesian.js","src/complex.js","src/long.js","src/polar.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Complex","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","peg$parse","input","options","text","substring","peg$savedPos","peg$currPos","error","peg$computeLocation","peg$buildSimpleError","peg$literalExpectation","ignoreCase","type","peg$classExpectation","parts","inverted","peg$endExpectation","peg$otherExpectation","description","peg$computePosDetails","pos","p","details","peg$posDetailsCache","line","column","charCodeAt","startPos","endPos","startPosDetails","endPosDetails","start","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","push","peg$buildStructuredError","buildMessage","peg$parseExpression","s0","s1","s2","s3","key","cached","peg$resultsCache","nextPos","result","peg$silentFails","peg$parse_","peg$FAILED","peg$parseShift","peg$c1","peg$c0","s4","s5","peg$parseScale","peg$c2","peg$c3","peg$parseNestedShift","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$parsePowerNegate","peg$parseNestedScale","peg$c14","peg$c15","peg$c16","peg$parseNestedScaleWithNegate","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$parsePower","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$parseGroup","peg$c32","peg$c33","substr","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$parseFunction","s6","s7","peg$parseIdentifier","peg$parseComma","peg$c52","peg$parseValue","peg$c51","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$parseNumber","peg$c59","test","charAt","peg$c60","peg$c61","peg$c62","peg$c63","peg$c58","peg$parseFloat","peg$c65","peg$c66","peg$c67","peg$c68","peg$parseInteger","peg$c69","peg$c64","peg$c70","peg$c71","peg$c72","peg$c73","peg$c75","peg$c76","peg$c74","isComplex","parameter","cache","value","index","findIndex","equals","getFunction","id","parameters","toLowerCase","canEval","every","hasOwnProperty","apply","map","join","getValue","toUpperCase","indexOf","getOperation","left","right","operand","peg$result","peg$startRuleFunctions","Expression","peg$startRuleFunction","operator","concat","Cartesian","startRule","hex","ch","toString","literalEscape","replace","classEscape","describeExpectation","expectation","DESCRIBE_EXPECTATION_FNS","describeExpected","j","descriptions","Array","sort","slice","describeFound","literal","class","escapedParts","any","other","SyntaxError","parse","utils","real","arguments","undefined","imag","mulDescriptor","nonEnumerable","that","divDescriptor","denom","Object","defineProperties","ZERO","ONE","NEG_ONE","I","NEG_I","TWO","TWO_I","PI","Math","E","create","abs","configurable","enumerable","get","hypot","set","defineProperty","writable","arg","atan2","multiply","times","mul","*","divide","div","/","isFinite","isNaN","negate","conjugate","normalize","square","cube","parser","sinh","number","NaN","exp","cosh","Number","EPSILON","_createClass","complex","isReal","isImag","sign","floor","ceil","round","truncate","Polar","pow","log","cos","sin","real2","imag2","sub","sqrt","add","iz","acos","asin","idz","acosh","asinh","minimum","Infinity","maximum","string","unshift","Function","bind","polar","toPrecision","maxUlps","Long","withinMaxUlps","equDescriptor","addDescriptor","subDescriptor","subtract","modDescriptor","modulo","powDescriptor","power","equ","=","plus","+","minus","-","mod","%","^","**","u48","u32","u16","u00","float64Array","uint16Array","b","_Long$fromFloat64$sub","fromFloat64","hi","lo","int32","arrayBuffer","ArrayBuffer","Float64Array","Uint16Array","remainder","transform"],"mappings":"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","file":"complex.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = peg$otherExpectation(\"expression\"),\n      peg$c1 = function(result) { return cache(result); },\n      peg$c2 = \"+\",\n      peg$c3 = peg$literalExpectation(\"+\", false),\n      peg$c4 = function(left, right) { return getOperation(getOperation(left, right.left, 'add'), right.right, right.operator); },\n      peg$c5 = \"-\",\n      peg$c6 = peg$literalExpectation(\"-\", false),\n      peg$c7 = function(left, right) { return getOperation(getOperation(left, right.left, 'subtract'), right.right, right.operator); },\n      peg$c8 = function(left, right) { return getOperation(left, right, 'add'); },\n      peg$c9 = function(left, right) { return getOperation(left, right, 'subtract'); },\n      peg$c10 = function(left, right) { return {left: getOperation(left, right.left, 'add'), right: right.right, operator: right.operator}; },\n      peg$c11 = function(left, right) { return {left: getOperation(left, right.left, 'subtract'), right: right.right, operator: right.operator}; },\n      peg$c12 = function(left, right) { return {left, right, operator: 'add'}; },\n      peg$c13 = function(left, right) { return {left, right, operator: 'subtract'}; },\n      peg$c14 = function(left, right) { return getOperation(getOperation(left, right.left, 'multiply'), right.right, right.operator); },\n      peg$c15 = \"*\",\n      peg$c16 = peg$literalExpectation(\"*\", false),\n      peg$c17 = \"/\",\n      peg$c18 = peg$literalExpectation(\"/\", false),\n      peg$c19 = function(left, right) { return getOperation(getOperation(left, right.left, 'divide'), right.right, right.operator); },\n      peg$c20 = \"%\",\n      peg$c21 = peg$literalExpectation(\"%\", false),\n      peg$c22 = function(left, right) { return getOperation(getOperation(left, right.left, 'mod'), right.right, right.operator); },\n      peg$c23 = function(left, right) { return getOperation(left, right, 'multiply'); },\n      peg$c24 = function(left, right) { return getOperation(left, right, 'divide'); },\n      peg$c25 = function(left, right) { return getOperation(left, right, 'mod'); },\n      peg$c26 = function(left, right) { return {left: getOperation(left, right.left, 'multiply'), right: right.right, operator: right.operator}; },\n      peg$c27 = function(left, right) { return {left: getOperation(left, right.left, 'divide'), right: right.right, operator: right.operator}; },\n      peg$c28 = function(left, right) { return {left: getOperation(left, right.left, 'mod'), right: right.right, operator: right.operator}; },\n      peg$c29 = function(left, right) { return {left, right, operator: 'multiply'}; },\n      peg$c30 = function(left, right) { return {left, right, operator: 'divide'}; },\n      peg$c31 = function(left, right) { return {left, right, operator: 'mod'}; },\n      peg$c32 = \"^\",\n      peg$c33 = peg$literalExpectation(\"^\", false),\n      peg$c34 = \"**\",\n      peg$c35 = peg$literalExpectation(\"**\", false),\n      peg$c36 = function(left, right) { return getOperation(left, right, 'pow'); },\n      peg$c37 = function(parameter) { return getFunction('negate', [parameter], error); },\n      peg$c38 = \"(\",\n      peg$c39 = peg$literalExpectation(\"(\", false),\n      peg$c40 = \")\",\n      peg$c41 = peg$literalExpectation(\")\", false),\n      peg$c42 = function(result) { return result; },\n      peg$c43 = \"[\",\n      peg$c44 = peg$literalExpectation(\"[\", false),\n      peg$c45 = \"]\",\n      peg$c46 = peg$literalExpectation(\"]\", false),\n      peg$c47 = \"{\",\n      peg$c48 = peg$literalExpectation(\"{\", false),\n      peg$c49 = \"}\",\n      peg$c50 = peg$literalExpectation(\"}\", false),\n      peg$c51 = peg$otherExpectation(\"function\"),\n      peg$c52 = function(id, parameters) { return getFunction(id, parameters, error); },\n      peg$c53 = \",\",\n      peg$c54 = peg$literalExpectation(\",\", false),\n      peg$c55 = function(left, right) { return [left].concat(right); },\n      peg$c56 = function(result) { return [result]; },\n      peg$c57 = function(id) { return getValue(id, error); },\n      peg$c58 = peg$otherExpectation(\"identifier\"),\n      peg$c59 = /^[A-Za-z]/,\n      peg$c60 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"]], false, false),\n      peg$c61 = /^[A-Za-z0-9]/,\n      peg$c62 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c63 = function() { return text(); },\n      peg$c64 = peg$otherExpectation(\"number\"),\n      peg$c65 = /^[Ee]/,\n      peg$c66 = peg$classExpectation([\"E\", \"e\"], false, false),\n      peg$c67 = /^[+\\-]/,\n      peg$c68 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c69 = function() { return new Complex.Cartesian(+text()); },\n      peg$c70 = \".\",\n      peg$c71 = peg$literalExpectation(\".\", false),\n      peg$c72 = /^[0-9]/,\n      peg$c73 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c74 = peg$otherExpectation(\"whitespace\"),\n      peg$c75 = /^[ \\t\\n\\r]/,\n      peg$c76 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$resultsCache = {},\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 0,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseShift();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c0); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseShift() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 1,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseScale();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNestedShift();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c4(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseScale();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedShift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c7(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseScale();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c2;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseScale();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c8(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseScale();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s3 = peg$c5;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseScale();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c9(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseScale();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedShift() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 2,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseScale();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNestedShift();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseScale();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedShift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseScale();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c2;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseScale();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c12(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseScale();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s3 = peg$c5;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseScale();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c13(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseScale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 3,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePowerNegate();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePowerNegate();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c14(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePowerNegate();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c19(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePowerNegate();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c22(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePowerNegate();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c23(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePowerNegate();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c23(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePowerNegate();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c24(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePowerNegate();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c25(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsePowerNegate();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedScaleWithNegate() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 4,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePowerNegate();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePowerNegate();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c26(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePowerNegate();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c27(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePowerNegate();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c28(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePowerNegate();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c29(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePowerNegate();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c29(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePowerNegate();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c30(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePowerNegate();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c31(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedScale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 5,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePower();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePower();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c26(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePower();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c27(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePower();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c28(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePower();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c29(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePower();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c29(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePower();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c30(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePower();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c31(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePowerNegate() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 6,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseGroup();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s3 = peg$c32;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c34) {\n            s3 = peg$c34;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePowerNegate();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsePowerNegate();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseGroup();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePower() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 7,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseGroup();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s3 = peg$c32;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c34) {\n            s3 = peg$c34;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePower();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGroup();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNegate() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 8,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePowerNegate();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c37(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGroup();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseGroup() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 9,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseShift();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c40;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c42(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseShift();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c45;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c46); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c42(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseShift();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s5 = peg$c49;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c42(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunction();\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var key    = peg$currPos * 18 + 10,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c38;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseComma();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c52(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseValue();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseComma() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 11,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseShift();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c53;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseComma();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseShift();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c56(s1);\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseValue() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 12,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c57(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumber();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 13,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c59.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c61.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 14,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseFloat();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c65.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c66); }\n      }\n      if (s3 !== peg$FAILED) {\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseInteger();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c69();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 15,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c70;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 16,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c72.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c73); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c72.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 17,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c75.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c76); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c75.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c76); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n\r\n    const Complex = require('../src/complex');\r\n\r\n    function isComplex(parameter) {\r\n      return parameter instanceof Complex;\r\n    }\r\n\r\n    function cache(value) {\r\n      // look for index of exact match before caching new value\r\n      const index = options.cached.findIndex(cached => cached.equals(value, 0));\r\n\r\n      return isComplex(value) ? 'this[' + (index >= 0 ? index : options.cached.push(value) - 1) + ']' : value;\r\n    }\r\n\r\n    function getFunction(id, parameters, error) {\r\n      const name = id.toLowerCase();\r\n      const canEval = parameters.every(isComplex);\r\n\r\n      if (Complex.hasOwnProperty(name) && typeof Complex[name] === 'function' && name !== 'constructor') {\r\n        if (Complex[name].length === 1) {\r\n          const parameter = parameters[0];\r\n\r\n          return canEval ? parameter[name]() : parameter + '.' + name + '()';\r\n        }\r\n\r\n        return canEval ? Complex[name].apply(Complex, parameters) : 'Complex.' + name + '(' + parameters.map(cache).join() + ')';\r\n      }\r\n\r\n      error('Expected function but \"' + name + '\" found.');\r\n    }\r\n\r\n    function getValue(id, error) {\r\n      const name = id.toUpperCase();\r\n\r\n      if (options.parameters.indexOf(id) >= 0) {\r\n        return id;\r\n      } else if (Complex.hasOwnProperty(name) && isComplex(Complex[name])) {\r\n        return Complex[name];\r\n      }\r\n\r\n      error('Expected constant or parameter but \"' + id + '\" found.');\r\n    }\r\n\r\n    function getOperation(left, right, operand) {\r\n      if (isComplex(left) && isComplex(right)) {\r\n        return left[operand](right);\r\n      }\r\n\r\n      return cache(left) + '.' + operand + '(' + cache(right) + ')';\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nconst Cartesian = module.exports = function Cartesian(real = 0, imag = 0) {\r\n  if (!(this instanceof Cartesian)) {\r\n    return new Cartesian(real, imag);\r\n  }\r\n\r\n  this.real = real;\r\n  this.imag = imag;\r\n};\r\n\r\nconst mulDescriptor = utils.nonEnumerable(function multiply(that) {\r\n  return new Cartesian(\r\n    this.real * that.real - this.imag * that.imag,\r\n    this.imag * that.real + this.real * that.imag\r\n  );\r\n});\r\nconst divDescriptor = utils.nonEnumerable(function divide(that) {\r\n  const denom = that.real * that.real + that.imag * that.imag;\r\n\r\n  return new Cartesian(\r\n    (this.real * that.real + this.imag * that.imag) / denom,\r\n    (this.imag * that.real - this.real * that.imag) / denom\r\n  );\r\n});\r\n\r\nObject.defineProperties(Cartesian, {\r\n  ZERO:    utils.nonEnumerable(new Cartesian(0, 0)),\r\n  ONE:     utils.nonEnumerable(new Cartesian(1, 0)),\r\n  NEG_ONE: utils.nonEnumerable(new Cartesian(-1, 0)),\r\n  I:       utils.nonEnumerable(new Cartesian(0, 1)),\r\n  NEG_I:   utils.nonEnumerable(new Cartesian(0, -1)),\r\n  TWO:     utils.nonEnumerable(new Cartesian(2, 0)),\r\n  TWO_I:   utils.nonEnumerable(new Cartesian(0, 2)),\r\n  PI:      utils.nonEnumerable(new Cartesian(Math.PI, 0)),\r\n  E:       utils.nonEnumerable(new Cartesian(Math.E, 0)),\r\n});\r\n\r\nCartesian.prototype = Object.create(require('./complex').prototype, {\r\n  constructor: utils.nonEnumerable(Cartesian),\r\n  abs: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.abs = utils.hypot(this.real, this.imag);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'abs', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  arg: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      const arg = Math.atan2(this.imag, this.real);\r\n\r\n      return this.arg = arg !== 0 ? -((-arg + Math.PI) % (Math.PI * 2) - Math.PI) : 0;\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'arg', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  multiply: mulDescriptor,\r\n  times:    mulDescriptor,\r\n  mul:      mulDescriptor,\r\n  '*':      mulDescriptor,\r\n  divide:   divDescriptor,\r\n  div:      divDescriptor,\r\n  '/':      divDescriptor,\r\n  isFinite: utils.nonEnumerable(function isFinite() {\r\n    return utils.isFinite(this.real) && utils.isFinite(this.imag);\r\n  }),\r\n  isNaN: utils.nonEnumerable(function isNaN() {\r\n    return utils.isNaN(this.real) || utils.isNaN(this.imag);\r\n  }),\r\n  negate: utils.nonEnumerable(function negate() {\r\n    return new Cartesian(-this.real, -this.imag);\r\n  }),\r\n  conjugate: utils.nonEnumerable(function conjugate() {\r\n    return new Cartesian(this.real, -this.imag);\r\n  }),\r\n  normalize: utils.nonEnumerable(function normalize() {\r\n    return new Cartesian(this.real / this.abs, this.imag / this.abs);\r\n  }),\r\n  square: utils.nonEnumerable(function square() {\r\n    return new Cartesian(\r\n      this.real * this.real - this.imag * this.imag,\r\n      this.real * this.imag * 2\r\n    );\r\n  }),\r\n  cube: utils.nonEnumerable(function cube() {\r\n    return new Cartesian(\r\n      this.real * (this.real * this.real - this.imag * this.imag * 3),\r\n      this.imag * (this.real * this.real * 3 - this.imag * this.imag)\r\n    );\r\n  }),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst parser = require('../parser');\r\nconst utils = require('./utils');\r\n\r\nif (Math.sinh === undefined) {\r\n  Math.sinh = function sinh(number = NaN) {\r\n    const exp = Math.exp(number);\r\n\r\n    return (exp - 1) / exp / 2;\r\n  };\r\n}\r\n\r\nif (Math.cosh === undefined) {\r\n  Math.cosh = function cosh(number = NaN) {\r\n    const exp = Math.exp(number);\r\n\r\n    return (exp + 1) / exp / 2;\r\n  };\r\n}\r\n\r\nif (Number.EPSILON === undefined) {\r\n  Number.EPSILON = 2.220446049250313e-16;\r\n}\r\n\r\nconst Complex = module.exports = class Complex {\r\n  // polymorphic static calls to inherited member methods\r\n  static isFinite(complex) {\r\n    return complex.isFinite();\r\n  }\r\n\r\n  static isNaN(complex) {\r\n    return complex.isNaN();\r\n  }\r\n\r\n  static isReal(complex) {\r\n    return complex.isReal();\r\n  }\r\n\r\n  static isImag(complex) {\r\n    return complex.isImag();\r\n  }\r\n\r\n  static negate(complex) {\r\n    return complex.negate();\r\n  }\r\n\r\n  static conjugate(complex) {\r\n    return complex.conjugate();\r\n  }\r\n\r\n  static normalize(complex) {\r\n    return complex.normalize();\r\n  }\r\n\r\n  static square(complex) {\r\n    return complex.square();\r\n  }\r\n\r\n  static cube(complex) {\r\n    return complex.cube();\r\n  }\r\n\r\n  // static methods\r\n  static sign(complex) {\r\n    return new Cartesian(utils.sign(complex.real), utils.sign(complex.imag));\r\n  }\r\n\r\n  static floor(complex) {\r\n    return new Cartesian(utils.floor(complex.real), utils.floor(complex.imag));\r\n  }\r\n\r\n  static ceil(complex) {\r\n    return new Cartesian(utils.ceil(complex.real), utils.ceil(complex.imag));\r\n  }\r\n\r\n  static round(complex) {\r\n    return new Cartesian(utils.round(complex.real), utils.round(complex.imag));\r\n  }\r\n\r\n  static truncate(complex) {\r\n    return new Cartesian(utils.truncate(complex.real), utils.truncate(complex.imag));\r\n  }\r\n\r\n  static fraction(complex) {\r\n    return new Cartesian(complex.real % 1, complex.imag % 1);\r\n  }\r\n\r\n  static sqrt(complex) {\r\n    return new Polar(\r\n      complex.abs ** 0.5,\r\n      complex.arg * 0.5\r\n    );\r\n  }\r\n\r\n  static cbrt(complex) {\r\n    return new Polar(\r\n      complex.abs ** (1/3),\r\n      complex.arg / 3\r\n    );\r\n  }\r\n\r\n  static exp(complex) {\r\n    return new Polar(\r\n      Math.exp(complex.real),\r\n      complex.imag\r\n    );\r\n  }\r\n\r\n  static log(complex) {\r\n    return new Cartesian(\r\n      Math.log(complex.abs),\r\n      complex.arg\r\n    );\r\n  }\r\n\r\n  static cos(complex) {\r\n    return new Cartesian(\r\n      Math.cos(complex.real) * Math.cosh(complex.imag),\r\n      -Math.sin(complex.real) * Math.sinh(complex.imag)\r\n    );\r\n  }\r\n\r\n  static sin(complex) {\r\n    return new Cartesian(\r\n      Math.sin(complex.real) * Math.cosh(complex.imag),\r\n      Math.cos(complex.real) * Math.sinh(complex.imag)\r\n    );\r\n  }\r\n\r\n  static tan(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(real2) + Math.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sin(real2) / denom,\r\n      Math.sinh(imag2) / denom\r\n    );\r\n  }\r\n\r\n  static sec(complex) {\r\n    const denom = Math.cos(complex.real * 2) + Math.cosh(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cos(complex.real) * Math.cosh(complex.imag) * 2 / denom,\r\n      Math.sin(complex.real) * Math.sinh(complex.real) * 2 / denom\r\n    );\r\n  }\r\n\r\n  static csc(complex) {\r\n    const denom = Math.cos(complex.real * 2) - Math.cosh(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(complex.real) * Math.cosh(complex.imag) * 2 / denom,\r\n      Math.cos(complex.real) * Math.sinh(complex.imag) * 2 / denom\r\n    );\r\n  }\r\n\r\n  static cot(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(real2) - Math.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(real2) / denom,\r\n      Math.sinh(imag2) / denom\r\n    );\r\n  }\r\n\r\n  static cosh(complex) {\r\n    return new Cartesian(\r\n      Math.cosh(complex.real) * Math.cos(complex.imag),\r\n      Math.sinh(complex.real) * Math.sin(complex.imag)\r\n    );\r\n  }\r\n\r\n  static sinh(complex) {\r\n    return new Cartesian(\r\n      Math.sinh(complex.real) * Math.cos(complex.imag),\r\n      Math.cosh(complex.real) * Math.sin(complex.imag)\r\n    );\r\n  }\r\n\r\n  static tanh(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cosh(real2) + Math.cos(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }\r\n\r\n  static sech(complex) {\r\n    const denom = Math.cosh(complex.real * 2) + Math.cos(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cosh(complex.real) * Math.cos(complex.imag) * 2 / denom,\r\n      -Math.sinh(complex.real) * Math.sin(complex.real) * 2 / denom\r\n    );\r\n  }\r\n\r\n  static csch(complex) {\r\n    const denom = Math.cos(complex.imag * 2) - Math.cosh(complex.real * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sinh(complex.real) * Math.cos(complex.imag) * 2 / denom,\r\n      Math.cosh(complex.real) * Math.sin(complex.imag) * 2 / denom\r\n    );\r\n  }\r\n\r\n  static coth(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(imag2) - Math.cosh(real2);\r\n\r\n    return new Cartesian(\r\n      -Math.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }\r\n\r\n  static acos(complex) {\r\n    // -i log(z+sqrt(z^2-1))\r\n    return complex.square().sub(Complex.ONE).sqrt().add(complex).log().mul(Complex.NEG_I);\r\n  }\r\n\r\n  static asin(complex) {\r\n    // -i log(iz+sqrt(1-z^2))\r\n    return Complex.ONE.sub(complex.square()).sqrt().add(complex.mul(Complex.I)).log().mul(Complex.NEG_I);\r\n  }\r\n\r\n  static atan(complex) {\r\n    const iz = Cartesian.I.mul(complex);\r\n    // i/2 (log(1-iz)-log(1+iz))\r\n    return Complex.ONE.sub(iz).log().sub(iz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }\r\n\r\n  static asec(complex) {\r\n    return Cartesian.ONE.div(complex).acos();\r\n  }\r\n\r\n  static acsc(complex) {\r\n    return Cartesian.ONE.div(complex).asin();\r\n  }\r\n\r\n  static acot(complex) {\r\n    const idz = Cartesian.I.div(complex);\r\n    // i/2 (log(1-i/z)-log(1+i/z))\r\n    return Complex.ONE.sub(idz).log().sub(idz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }\r\n\r\n  static acosh(complex) {\r\n    // log(z+sqrt(z^2-1))\r\n    return complex.square().sub(Complex.ONE).sqrt().add(complex).log();\r\n  }\r\n\r\n  static asinh(complex) {\r\n    // log(z+sqrt(z^2+1))\r\n    return complex.square().add(Complex.ONE).sqrt().add(complex).log();\r\n  }\r\n\r\n  static atanh(complex) {\r\n    // log((1+z)/(1-z))/2\r\n    return complex.add(Complex.ONE).div(Complex.ONE.sub(complex)).log().div(Complex.TWO);\r\n  }\r\n\r\n  static asech(complex) {\r\n    return Cartesian.ONE.div(complex).acosh();\r\n  }\r\n\r\n  static acsch(complex) {\r\n    return Cartesian.ONE.div(complex).asinh();\r\n  }\r\n\r\n  static acoth(complex) {\r\n    // log((z+1)/(z-1))/2\r\n    return complex.add(Complex.ONE).div(complex.sub(Complex.ONE)).log().div(Complex.TWO);\r\n  }\r\n\r\n  static min() {\r\n    var minimum = new Complex(Infinity, 0, Infinity, 0);\r\n\r\n    for (var index = 0; index < arguments.length; index++) {\r\n      if (arguments[index].abs < minimum.abs) {\r\n        minimum = arguments[index];\r\n      }\r\n    }\r\n\r\n    return minimum;\r\n  }\r\n\r\n  static max() {\r\n    var maximum = Complex.ZERO;\r\n\r\n    for (var index = 0; index < arguments.length; index++) {\r\n      if (arguments[index].abs > maximum.abs) {\r\n        maximum = arguments[index];\r\n      }\r\n    }\r\n\r\n    return maximum;\r\n  }\r\n\r\n  static compile(string, parameters = []) {\r\n    const cached = [];\r\n    const result = parser.parse(string, {parameters, cached});\r\n\r\n    parameters.unshift('Complex');\r\n\r\n    return new Function(parameters.join(), 'return ' + result).bind(cached, Complex);\r\n  }\r\n\r\n  constructor(real = 0, imag = 0, abs = utils.hypot(real, imag), arg = Math.atan2(imag, real)) {\r\n    if (!(this instanceof Complex)) {\r\n      return new Complex(real, imag, abs, arg);\r\n    }\r\n\r\n    this.real = real;\r\n    this.imag = imag;\r\n    this.abs  = abs >= 0 ? abs : -abs;\r\n    this.arg  = arg !== 0 ? -((-arg + (abs >= 0 ? Math.PI : 0)) % (Math.PI * 2) - Math.PI) : abs < 0 ? Math.PI : 0;\r\n  }\r\n\r\n  // member methods\r\n  toString(polar) {\r\n    let string = '';\r\n\r\n    if (!polar) {\r\n      const real = this.real.toPrecision();\r\n      const imag = this.imag.toPrecision();\r\n\r\n      if (this.real !== 0 || this.imag === 0) {\r\n        string += real;\r\n      }\r\n\r\n      if (this.imag !== 0) {\r\n        if (this.real !== 0 && this.imag > 0) {\r\n          string += '+';\r\n        }\r\n\r\n        string += this.imag === 1 ? 'i' : this.imag === -1 ? '-i' : imag + '*i';\r\n      }\r\n    } else {\r\n      const abs = this.abs.toPrecision();\r\n      const arg = this.arg.toPrecision();\r\n\r\n      string = abs;\r\n\r\n      if (this.abs !== 0 && this.arg !== 0) {\r\n        string += `*e^(${arg}*i)`;\r\n      }\r\n    }\r\n\r\n    return string;\r\n  }\r\n\r\n  equals(that, maxUlps = 4) {\r\n    return (\r\n      Long.withinMaxUlps(this.real, that.real, maxUlps) && Long.withinMaxUlps(this.imag, that.imag, maxUlps) ||\r\n      Long.withinMaxUlps(this.abs, that.abs, maxUlps) && Long.withinMaxUlps(this.arg, that.arg, maxUlps)\r\n    );\r\n  }\r\n\r\n  add(that) {\r\n    return new Cartesian(this.real + that.real, this.imag + that.imag);\r\n  }\r\n\r\n  subtract(that) {\r\n    return new Cartesian(this.real - that.real, this.imag - that.imag);\r\n  }\r\n\r\n  multiply(that) {\r\n    return new Complex(\r\n      this.real * that.real - this.imag * that.imag,\r\n      this.imag * that.real + this.real * that.imag,\r\n      this.abs * that.abs, this.arg + that.arg\r\n    );\r\n  }\r\n\r\n  divide(that) {\r\n    const denom = that.real * that.real + that.imag * that.imag;\r\n\r\n    return new Complex(\r\n      (this.real * that.real + this.imag * that.imag) / denom,\r\n      (this.imag * that.real - this.real * that.imag) / denom,\r\n      this.abs / that.abs, this.arg - that.arg\r\n    );\r\n  }\r\n\r\n  modulo(that) {\r\n    return new Cartesian(this.real % that.real, this.imag % that.imag);\r\n  }\r\n\r\n  power(that) {\r\n    return new Polar(\r\n      (this.abs ** that.real) * Math.exp(-that.imag * this.arg),\r\n      that.imag * Math.log(this.abs) + that.real * this.arg\r\n    );\r\n  }\r\n\r\n  // member methods for static functions\r\n  isFinite() {\r\n    return utils.isFinite(this.abs);\r\n  }\r\n\r\n  isNaN() {\r\n    return utils.isNaN(this.abs) || utils.isNaN(this.arg);\r\n  }\r\n\r\n  isReal() {\r\n    return (\r\n      this.imag <= Number.EPSILON && -this.imag <= Number.EPSILON ||\r\n      this.arg <= Number.EPSILON && -this.arg <= Number.EPSILON ||\r\n      Long.withinMaxUlps(this.arg, Math.PI)\r\n    );\r\n  }\r\n\r\n  isImag() {\r\n    return (\r\n      this.real <= Number.EPSILON && -this.real <= Number.EPSILON ||\r\n      Long.withinMaxUlps(this.arg < 0 ? -this.arg : this.arg, Math.PI / 2)\r\n    );\r\n  }\r\n\r\n  negate() {\r\n    return new Complex(-this.real, -this.imag, -this.abs, this.arg);\r\n  }\r\n\r\n  conjugate() {\r\n    return new Complex(this.real, -this.imag, this.abs, -this.arg);\r\n  }\r\n\r\n  normalize() {\r\n    return new Complex(\r\n      this.real / this.abs,\r\n      this.imag / this.abs,\r\n      this.abs / this.abs,\r\n      this.arg\r\n    );\r\n  }\r\n\r\n  square() {\r\n    return new Complex(\r\n      this.real * this.real - this.imag * this.imag,\r\n      this.real * this.imag * 2,\r\n      this.abs * this.abs,\r\n      this.arg * 2\r\n    );\r\n  }\r\n\r\n  cube() {\r\n    return new Complex(\r\n      this.real * (this.real * this.real - this.imag * this.imag * 3),\r\n      this.imag * (this.real * this.real * 3 - this.imag * this.imag),\r\n      this.abs * this.abs * this.abs, this.arg * 3\r\n    );\r\n  }\r\n\r\n  sign() {\r\n    return new Cartesian(utils.sign(this.real), utils.sign(this.imag));\r\n  }\r\n\r\n  floor() {\r\n    return new Cartesian(utils.floor(this.real), utils.floor(this.imag));\r\n  }\r\n\r\n  ceil() {\r\n    return new Cartesian(utils.ceil(this.real), utils.ceil(this.imag));\r\n  }\r\n\r\n  round() {\r\n    return new Cartesian(utils.round(this.real), utils.round(this.imag));\r\n  }\r\n\r\n  truncate() {\r\n    return new Cartesian(utils.truncate(this.real), utils.truncate(this.imag));\r\n  }\r\n\r\n  fraction() {\r\n    return new Cartesian(this.real % 1, this.imag % 1);\r\n  }\r\n\r\n  sqrt() {\r\n    return new Polar(\r\n      this.abs ** 0.5,\r\n      this.arg * 0.5\r\n    );\r\n  }\r\n\r\n  cbrt() {\r\n    return new Polar(\r\n      this.abs ** (1/3),\r\n      this.arg / 3\r\n    );\r\n  }\r\n\r\n  exp() {\r\n    return new Polar(\r\n      Math.exp(this.real),\r\n      this.imag\r\n    );\r\n  }\r\n\r\n  log() {\r\n    return new Cartesian(\r\n      Math.log(this.abs),\r\n      this.arg\r\n    );\r\n  }\r\n\r\n  cos() {\r\n    return new Cartesian(\r\n      Math.cos(this.real) * Math.cosh(this.imag),\r\n      -Math.sin(this.real) * Math.sinh(this.imag)\r\n    );\r\n  }\r\n\r\n  sin() {\r\n    return new Cartesian(\r\n      Math.sin(this.real) * Math.cosh(this.imag),\r\n      Math.cos(this.real) * Math.sinh(this.imag)\r\n    );\r\n  }\r\n\r\n  tan() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(real2) + Math.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sin(real2) / denom,\r\n      Math.sinh(imag2) / denom\r\n    );\r\n  }\r\n\r\n  sec() {\r\n    const denom = Math.cos(this.real * 2) + Math.cosh(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cos(this.real) * Math.cosh(this.imag) * 2 / denom,\r\n      Math.sin(this.real) * Math.sinh(this.real) * 2 / denom\r\n    );\r\n  }\r\n\r\n  csc() {\r\n    const denom = Math.cos(this.real * 2) - Math.cosh(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(this.real) * Math.cosh(this.imag) * 2 / denom,\r\n      Math.cos(this.real) * Math.sinh(this.imag) * 2 / denom\r\n    );\r\n  }\r\n\r\n  cot() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(real2) - Math.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(real2) / denom,\r\n      Math.sinh(imag2) / denom\r\n    );\r\n  }\r\n\r\n  cosh() {\r\n    return new Cartesian(\r\n      Math.cosh(this.real) * Math.cos(this.imag),\r\n      Math.sinh(this.real) * Math.sin(this.imag)\r\n    );\r\n  }\r\n\r\n  sinh() {\r\n    return new Cartesian(\r\n      Math.sinh(this.real) * Math.cos(this.imag),\r\n      Math.cosh(this.real) * Math.sin(this.imag)\r\n    );\r\n  }\r\n\r\n  tanh() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cosh(real2) + Math.cos(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }\r\n\r\n  sech() {\r\n    const denom = Math.cosh(this.real * 2) + Math.cos(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cosh(this.real) * Math.cos(this.imag) * 2 / denom,\r\n      -Math.sinh(this.real) * Math.sin(this.real) * 2 / denom\r\n    );\r\n  }\r\n\r\n  csch() {\r\n    const denom = Math.cos(this.imag * 2) - Math.cosh(this.real * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sinh(this.real) * Math.cos(this.imag) * 2 / denom,\r\n      Math.cosh(this.real) * Math.sin(this.imag) * 2 / denom\r\n    );\r\n  }\r\n\r\n  coth() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(imag2) - Math.cosh(real2);\r\n\r\n    return new Cartesian(\r\n      -Math.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }\r\n\r\n  acos() {\r\n    // -i log(z+sqrt(z^2-1))\r\n    return this.square().sub(Complex.ONE).sqrt().add(this).log().mul(Complex.NEG_I);\r\n  }\r\n\r\n  asin() {\r\n    // -i log(iz+sqrt(1-z^2))\r\n    return Complex.ONE.sub(this.square()).sqrt().add(this.mul(Complex.I)).log().mul(Complex.NEG_I);\r\n  }\r\n\r\n  atan() {\r\n    const iz = this.mul(Complex.I);\r\n    // i/2 (log(1-iz)-log(1+iz))\r\n    return Complex.ONE.sub(iz).log().sub(iz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }\r\n\r\n  asec() {\r\n    return Cartesian.ONE.div(this).acos();\r\n  }\r\n\r\n  acsc() {\r\n    return Cartesian.ONE.div(this).asin();\r\n  }\r\n\r\n  acot() {\r\n    const idz = Complex.I.div(this);\r\n    // i/2 (log(1-i/z)-log(1+i/z))\r\n    return Complex.ONE.sub(idz).log().sub(idz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }\r\n\r\n  acosh() {\r\n    // log(z+sqrt(z^2-1))\r\n    return this.square().sub(Complex.ONE).sqrt().add(this).log();\r\n  }\r\n\r\n  asinh() {\r\n    // log(z+sqrt(z^2+1))\r\n    return this.square().add(Complex.ONE).sqrt().add(this).log();\r\n  }\r\n\r\n  atanh() {\r\n    // log((1+z)/(1-z))/2\r\n    return this.add(Complex.ONE).div(Complex.ONE.sub(this)).log().div(Complex.TWO);\r\n  }\r\n\r\n  asech() {\r\n    return Cartesian.ONE.div(this).acosh();\r\n  }\r\n\r\n  acsch() {\r\n    return Cartesian.ONE.div(this).asinh();\r\n  }\r\n\r\n  acoth() {\r\n    // log((z+1)/(z-1))/2\r\n    return this.add(Complex.ONE).div(this.sub(Complex.ONE)).log().div(Complex.TWO);\r\n  }\r\n}\r\n\r\nconst Cartesian = require('./cartesian');\r\nconst Polar = require('./polar');\r\nconst Long = require('./long');\r\n\r\nObject.defineProperties(Complex, {\r\n  Cartesian: utils.nonEnumerable(Cartesian),\r\n  Polar:     utils.nonEnumerable(Polar),\r\n  ZERO:      utils.nonEnumerable(new Complex(0, 0, 0, 0)),\r\n  ONE:       utils.nonEnumerable(new Complex(1, 0, 1, 0)),\r\n  NEG_ONE:   utils.nonEnumerable(new Complex(-1, 0, 1, Math.PI)),\r\n  I:         utils.nonEnumerable(new Complex(0, 1, 1, Math.PI / 2)),\r\n  NEG_I:     utils.nonEnumerable(new Complex(0, -1, 1, -Math.PI / 2)),\r\n  TWO:       utils.nonEnumerable(new Complex(2, 0, 2, 0)),\r\n  TWO_I:     utils.nonEnumerable(new Complex(0, 2, 2, Math.PI / 2)),\r\n  PI:        utils.nonEnumerable(new Complex(Math.PI, 0, Math.PI, 0)),\r\n  E:         utils.nonEnumerable(new Complex(Math.E, 0, Math.E, 0)),\r\n});\r\n\r\nconst equDescriptor = utils.nonEnumerable(Complex.prototype.equals);\r\nconst addDescriptor = utils.nonEnumerable(Complex.prototype.add);\r\nconst subDescriptor = utils.nonEnumerable(Complex.prototype.subtract);\r\nconst mulDescriptor = utils.nonEnumerable(Complex.prototype.multiply);\r\nconst divDescriptor = utils.nonEnumerable(Complex.prototype.divide);\r\nconst modDescriptor = utils.nonEnumerable(Complex.prototype.modulo);\r\nconst powDescriptor = utils.nonEnumerable(Complex.prototype.power);\r\n\r\nObject.defineProperties(Complex.prototype, {\r\n  equ:   equDescriptor,\r\n  '=':   equDescriptor,\r\n  plus:  addDescriptor,\r\n  '+':   addDescriptor,\r\n  minus: subDescriptor,\r\n  sub:   subDescriptor,\r\n  '-':   subDescriptor,\r\n  times: mulDescriptor,\r\n  mul:   mulDescriptor,\r\n  '*':   mulDescriptor,\r\n  div:   divDescriptor,\r\n  '/':   divDescriptor,\r\n  mod:   modDescriptor,\r\n  '%':   modDescriptor,\r\n  pow:   powDescriptor,\r\n  '^':   powDescriptor,\r\n  '**':  powDescriptor,\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nconst Long = module.exports = class Long {\r\n  // bound float64Array and uint16Array\r\n  // access same arrayBuffer\r\n  static fromFloat64(float64Array, uint16Array, value) {\r\n    // protects against -0\r\n    float64Array[0] = value === 0 ? 0 : value;\r\n\r\n    // little endian encoding assumed\r\n    return new Long(uint16Array[3], uint16Array[2], uint16Array[1], uint16Array[0]);\r\n  }\r\n\r\n  static withinMaxUlps(a, b, maxUlps = 4) {\r\n    // covers +-Infinity and NaN\r\n    if (!utils.isFinite(a) || !utils.isFinite(b)) {\r\n      return +a === +b;\r\n    }\r\n\r\n    const {hi, lo} = Long.fromFloat64(+a).sub(Long.fromFloat64(+b));\r\n\r\n    return hi === 0 && lo <= maxUlps || ~hi === 0 && ~lo <= maxUlps;\r\n  }\r\n\r\n  constructor(u48, u32, u16, u00) {\r\n    this.u48 = u48;\r\n    this.u32 = u32;\r\n    this.u16 = u16;\r\n    this.u00 = u00;\r\n  }\r\n\r\n  get hi() {\r\n    return (this.u48 << 16) | this.u32;\r\n  }\r\n\r\n  get lo() {\r\n    return (this.u16 << 16) | this.u00;\r\n  }\r\n\r\n  set hi(int32) {\r\n    this.u48 = int32 >>> 16;\r\n    this.u32 = int32 & 0xFFFF;\r\n\r\n    return this.hi;\r\n  }\r\n\r\n  set lo(int32) {\r\n    this.u16 = int32 >>> 16;\r\n    this.u00 = int32 & 0xFFFF;\r\n\r\n    return this.lo;\r\n  }\r\n\r\n  negate() {\r\n    this.hi = ~this.hi;\r\n    this.lo = ~this.lo;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(that) {\r\n    let u48, u32, u16, u00;\r\n\r\n    u00 = this.u00 + that.u00;\r\n    u16 = u00 >>> 16;\r\n    u00 &= 0xFFFF;\r\n    u16 += this.u16 + that.u16;\r\n    u32 = u16 >>> 16;\r\n    u16 &= 0xFFFF;\r\n    u32 += this.u32 + that.u32;\r\n    u48 = u32 >>> 16;\r\n    u32 &= 0xFFFF;\r\n    u48 += this.u48 + that.u48;\r\n    u48 &= 0xFFFF;\r\n\r\n    this.u48 = u48;\r\n    this.u32 = u32;\r\n    this.u16 = u16;\r\n    this.u00 = u00;\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(that) {\r\n    return this.add(that.negate().add(Long.ONE));\r\n  }\r\n}\r\n\r\nLong.ONE = new Long(0x0000, 0x0000, 0x0000, 0x0001);\r\n\r\nconst arrayBuffer = new ArrayBuffer(8);\r\n\r\nObject.defineProperty(Long, 'fromFloat64', utils.nonEnumerable(\r\n    Long.fromFloat64.bind(Long, new Float64Array(arrayBuffer), new Uint16Array(arrayBuffer))\r\n  )\r\n);\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst nonEnumerable = require('./utils').nonEnumerable;\r\nconst Long = require('./long');\r\n\r\nconst Polar = module.exports = function Polar(abs = 0, arg = 0) {\r\n  if (!(this instanceof Polar)) {\r\n    return new Polar(abs, arg);\r\n  }\r\n\r\n  this.abs = abs >= 0 ? abs : -abs;\r\n  this.arg = arg !== 0 ? -((-arg + (abs >= 0 ? Math.PI : 0)) % (Math.PI * 2) - Math.PI) : abs < 0 ? Math.PI : 0;\r\n};\r\n\r\nconst equDescriptor = nonEnumerable(function equals(that, maxUlps = 4) {\r\n  return (\r\n    Long.withinMaxUlps(this.abs, that.abs, maxUlps) && Long.withinMaxUlps(this.arg, that.arg, maxUlps) ||\r\n    Long.withinMaxUlps(this.real, that.real, maxUlps) && Long.withinMaxUlps(this.imag, that.imag, maxUlps)\r\n  );\r\n});\r\nconst mulDescriptor = nonEnumerable(function multiply(that) {\r\n  return new Polar(this.abs * that.abs, this.arg + that.arg);\r\n});\r\nconst divDescriptor = nonEnumerable(function divide(that) {\r\n  return new Polar(this.abs / that.abs, this.arg - that.arg);\r\n});\r\n\r\nObject.defineProperties(Polar, {\r\n  ZERO:    nonEnumerable(new Polar(0, 0)),\r\n  ONE:     nonEnumerable(new Polar(1, 0)),\r\n  NEG_ONE: nonEnumerable(new Polar(1, Math.PI)),\r\n  I:       nonEnumerable(new Polar(1, Math.PI / 2)),\r\n  NEG_I:   nonEnumerable(new Polar(1, -Math.PI / 2)),\r\n  TWO:     nonEnumerable(new Polar(2, 0)),\r\n  TWO_I:   nonEnumerable(new Polar(2, Math.PI / 2)),\r\n  PI:      nonEnumerable(new Polar(Math.PI, 0)),\r\n  E:       nonEnumerable(new Polar(Math.E, 0)),\r\n});\r\n\r\nPolar.prototype = Object.create(require('./complex').prototype, {\r\n  constructor: nonEnumerable(Polar),\r\n  real: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.real = this.abs * Math.cos(this.arg);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'real', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  imag: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.imag = this.abs * Math.sin(this.arg);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'imag', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  equals:   equDescriptor,\r\n  equ:      equDescriptor,\r\n  '=':      equDescriptor,\r\n  multiply: mulDescriptor,\r\n  times:    mulDescriptor,\r\n  mul:      mulDescriptor,\r\n  '*':      mulDescriptor,\r\n  divide:   divDescriptor,\r\n  div:      divDescriptor,\r\n  '/':      divDescriptor,\r\n  isReal: nonEnumerable(function isReal() {\r\n    return (\r\n      this.arg <= Number.EPSILON && -this.arg <= Number.EPSILON ||\r\n      Long.withinMaxUlps(this.arg, Math.PI) ||\r\n      this.imag <= Number.EPSILON && -this.imag <= Number.EPSILON\r\n    );\r\n  }),\r\n  isImag: nonEnumerable(function isImag() {\r\n    return (\r\n      Long.withinMaxUlps(this.arg < 0 ? -this.arg : this.arg, Math.PI / 2) ||\r\n      this.real <= Number.EPSILON && -this.real <= Number.EPSILON\r\n    );\r\n  }),\r\n  negate: nonEnumerable(function negate() {\r\n    return new Polar(-this.abs, this.arg);\r\n  }),\r\n  conjugate: nonEnumerable(function conjugate() {\r\n    return new Polar(this.abs, -this.arg);\r\n  }),\r\n  normalize: nonEnumerable(function normalize() {\r\n    return new Polar(this.abs / this.abs, this.arg);\r\n  }),\r\n  square: nonEnumerable(function square() {\r\n    return new Polar(this.abs * this.abs, this.arg * 2);\r\n  }),\r\n  cube: nonEnumerable(function cube() {\r\n    return new Polar(this.abs * this.abs * this.abs, this.arg * 3);\r\n  }),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  nonEnumerable(value) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value,\r\n      writable: true,\r\n    };\r\n  },\r\n  isFinite: global.isFinite || function isFinite(number) {\r\n    return +number < Infinity && -number > Infinity;\r\n  },\r\n  isNaN: global.isNaN || function isNaN(number) {\r\n    number = +number;\r\n\r\n    return value !== value;\r\n  },\r\n  sign: Math.sign || function sign(number = NaN) {\r\n    return number > 0 ? 1 : number < 0 ? -1 : number == 0 ? 0 : NaN;\r\n  },\r\n  floor: Math.floor || function floor(number = NaN) {\r\n    const remainder = number % 1;\r\n\r\n    return remainder >= 0 ? number - remainder : number - (1 - remainder) % 1;\r\n  },\r\n  ceil: Math.ceil || function ceil(number = NaN) {\r\n    const remainder = number % 1;\r\n\r\n    return remainder >= 0 ? number + (1 - remainder) % 1 : number - remainder;\r\n  },\r\n  round: Math.round || function round(number = NaN) {\r\n    const transform = number + 0.5;\r\n    const remainder = transform % 1;\r\n\r\n    return remainder >= 0 ? transform - remainder : transform - 1 - remainder;\r\n  },\r\n  truncate: Math.truncate || function truncate(number = NaN) {\r\n    return number - (number % 1);\r\n  },\r\n  hypot: Math.hypot || function hypot(a, b) {\r\n    return Math.sqrt(a * a + b * b);\r\n  },\r\n};\r\n"]}