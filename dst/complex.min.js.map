{"version":3,"sources":["node_modules/browser-pack/_prelude.js","parser/index.js","src/cartesian.js","src/complex.js","src/long.js","src/polar.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Complex","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","peg$parse","input","options","text","substring","peg$savedPos","peg$currPos","error","peg$computeLocation","peg$buildSimpleError","peg$literalExpectation","ignoreCase","type","peg$classExpectation","parts","inverted","peg$endExpectation","peg$otherExpectation","description","peg$computePosDetails","pos","p","details","peg$posDetailsCache","line","column","charCodeAt","startPos","endPos","startPosDetails","endPosDetails","start","offset","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","push","peg$buildStructuredError","buildMessage","peg$parseExpression","s0","s1","s2","s3","key","cached","peg$resultsCache","nextPos","result","peg$silentFails","peg$parse_","peg$FAILED","peg$parseShift","peg$c1","peg$c0","s4","s5","peg$parseScale","peg$c2","peg$c3","peg$parseNestedShift","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$parsePowerNegate","peg$parseNestedScale","peg$c14","peg$c15","peg$c16","peg$parseNestedScaleWithNegate","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$parsePower","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$parseGroup","peg$c32","peg$c33","substr","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$parseFunction","s6","s7","peg$parseIdentifier","peg$parseComma","peg$c52","peg$parseValue","peg$c51","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$parseNumber","peg$c59","test","charAt","peg$c60","peg$c61","peg$c62","peg$c63","peg$c58","peg$parseFloat","peg$c65","peg$c66","peg$c67","peg$c68","peg$parseInteger","peg$c69","peg$c64","peg$c70","peg$c71","peg$c72","peg$c73","peg$c75","peg$c76","peg$c74","isComplex","parameter","cache","value","index","findIndex","equals","getFunction","id","parameters","toLowerCase","canEval","every","indexOf","map","join","hasOwnProperty","apply","getValue","toUpperCase","getOperation","left","right","operand","peg$result","peg$startRuleFunctions","Expression","peg$startRuleFunction","operator","concat","Cartesian","startRule","hex","ch","toString","literalEscape","replace","classEscape","describeExpectation","expectation","DESCRIBE_EXPECTATION_FNS","describeExpected","j","descriptions","Array","sort","slice","describeFound","literal","class","escapedParts","any","other","SyntaxError","parse","utils","real","arguments","undefined","imag","mulDescriptor","nonEnumerable","that","divDescriptor","denom","Object","defineProperties","ZERO","ONE","NEG_ONE","I","NEG_I","TWO","TWO_I","PI","Math","E","create","abs","configurable","enumerable","get","hypot","set","defineProperty","writable","arg","atan2","multiply","times","mul","*","divide","div","/","isFinite","isNaN","negate","conjugate","normalize","square","cube","parser","Polar","Long","complex","isReal","isImag","sign","floor","ceil","round","truncate","fraction","sqrt","cbrt","pow","exp","log","cos","cosh","sin","sinh","tan","real2","imag2","sec","csc","cot","tanh","sech","csch","coth","acos","sub","add","asin","atan","iz","asec","acsc","acot","idz","acosh","asinh","atanh","asech","acsch","acoth","min","minimum","Infinity","max","maximum","compile","string","unshift","Function","bind","equDescriptor","maxUlps","withinMaxUlps","addDescriptor","subDescriptor","modDescriptor","powDescriptor","polar","toPrecision","equ","=","plus","+","subtract","minus","-","modulo","mod","%","power","^","**","EPSILON","u48","u32","u16","u00","_classCallCheck","_createClass","float64Array","uint16Array","b","_Long$fromFloat64$sub","fromFloat64","hi","lo","int32","arrayBuffer","ArrayBuffer","Float64Array","Uint16Array","number","NaN","trunc","Number"],"mappings":"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","file":"complex.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = peg$otherExpectation(\"expression\"),\n      peg$c1 = function(result) { return cache(result); },\n      peg$c2 = \"+\",\n      peg$c3 = peg$literalExpectation(\"+\", false),\n      peg$c4 = function(left, right) { return getOperation(getOperation(left, right.left, 'add'), right.right, right.operator); },\n      peg$c5 = \"-\",\n      peg$c6 = peg$literalExpectation(\"-\", false),\n      peg$c7 = function(left, right) { return getOperation(getOperation(left, right.left, 'subtract'), right.right, right.operator); },\n      peg$c8 = function(left, right) { return getOperation(left, right, 'add'); },\n      peg$c9 = function(left, right) { return getOperation(left, right, 'subtract'); },\n      peg$c10 = function(left, right) { return {left: getOperation(left, right.left, 'add'), right: right.right, operator: right.operator}; },\n      peg$c11 = function(left, right) { return {left: getOperation(left, right.left, 'subtract'), right: right.right, operator: right.operator}; },\n      peg$c12 = function(left, right) { return {left, right, operator: 'add'}; },\n      peg$c13 = function(left, right) { return {left, right, operator: 'subtract'}; },\n      peg$c14 = function(left, right) { return getOperation(getOperation(left, right.left, 'multiply'), right.right, right.operator); },\n      peg$c15 = \"*\",\n      peg$c16 = peg$literalExpectation(\"*\", false),\n      peg$c17 = \"/\",\n      peg$c18 = peg$literalExpectation(\"/\", false),\n      peg$c19 = function(left, right) { return getOperation(getOperation(left, right.left, 'divide'), right.right, right.operator); },\n      peg$c20 = \"%\",\n      peg$c21 = peg$literalExpectation(\"%\", false),\n      peg$c22 = function(left, right) { return getOperation(getOperation(left, right.left, 'mod'), right.right, right.operator); },\n      peg$c23 = function(left, right) { return getOperation(left, right, 'multiply'); },\n      peg$c24 = function(left, right) { return getOperation(left, right, 'divide'); },\n      peg$c25 = function(left, right) { return getOperation(left, right, 'mod'); },\n      peg$c26 = function(left, right) { return {left: getOperation(left, right.left, 'multiply'), right: right.right, operator: right.operator}; },\n      peg$c27 = function(left, right) { return {left: getOperation(left, right.left, 'divide'), right: right.right, operator: right.operator}; },\n      peg$c28 = function(left, right) { return {left: getOperation(left, right.left, 'mod'), right: right.right, operator: right.operator}; },\n      peg$c29 = function(left, right) { return {left, right, operator: 'multiply'}; },\n      peg$c30 = function(left, right) { return {left, right, operator: 'divide'}; },\n      peg$c31 = function(left, right) { return {left, right, operator: 'mod'}; },\n      peg$c32 = \"^\",\n      peg$c33 = peg$literalExpectation(\"^\", false),\n      peg$c34 = \"**\",\n      peg$c35 = peg$literalExpectation(\"**\", false),\n      peg$c36 = function(left, right) { return getOperation(left, right, 'pow'); },\n      peg$c37 = function(parameter) { return getFunction('negate', [parameter], error); },\n      peg$c38 = \"(\",\n      peg$c39 = peg$literalExpectation(\"(\", false),\n      peg$c40 = \")\",\n      peg$c41 = peg$literalExpectation(\")\", false),\n      peg$c42 = function(result) { return result; },\n      peg$c43 = \"[\",\n      peg$c44 = peg$literalExpectation(\"[\", false),\n      peg$c45 = \"]\",\n      peg$c46 = peg$literalExpectation(\"]\", false),\n      peg$c47 = \"{\",\n      peg$c48 = peg$literalExpectation(\"{\", false),\n      peg$c49 = \"}\",\n      peg$c50 = peg$literalExpectation(\"}\", false),\n      peg$c51 = peg$otherExpectation(\"function\"),\n      peg$c52 = function(id, parameters) { return getFunction(id, parameters, error); },\n      peg$c53 = \",\",\n      peg$c54 = peg$literalExpectation(\",\", false),\n      peg$c55 = function(left, right) { return [left].concat(right); },\n      peg$c56 = function(result) { return [result]; },\n      peg$c57 = function(id) { return getValue(id, error); },\n      peg$c58 = peg$otherExpectation(\"identifier\"),\n      peg$c59 = /^[A-Za-z]/,\n      peg$c60 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"]], false, false),\n      peg$c61 = /^[A-Za-z0-9]/,\n      peg$c62 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c63 = function() { return text(); },\n      peg$c64 = peg$otherExpectation(\"number\"),\n      peg$c65 = /^[Ee]/,\n      peg$c66 = peg$classExpectation([\"E\", \"e\"], false, false),\n      peg$c67 = /^[+\\-]/,\n      peg$c68 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c69 = function() { return new Complex.Cartesian(+text()); },\n      peg$c70 = \".\",\n      peg$c71 = peg$literalExpectation(\".\", false),\n      peg$c72 = /^[0-9]/,\n      peg$c73 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c74 = peg$otherExpectation(\"whitespace\"),\n      peg$c75 = /^[ \\t\\n\\r]/,\n      peg$c76 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$resultsCache = {},\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 0,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseShift();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c0); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseShift() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 1,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseScale();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNestedShift();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c4(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseScale();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedShift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c7(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseScale();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c2;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseScale();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c8(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseScale();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s3 = peg$c5;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseScale();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c9(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseScale();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedShift() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 2,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseScale();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseNestedShift();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseScale();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedShift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseScale();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c2;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseScale();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c12(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseScale();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s3 = peg$c5;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseScale();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c13(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseScale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 3,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePowerNegate();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePowerNegate();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c14(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePowerNegate();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c19(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePowerNegate();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c22(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePowerNegate();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c23(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePowerNegate();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c23(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePowerNegate();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c24(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePowerNegate();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c25(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsePowerNegate();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedScaleWithNegate() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 4,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePowerNegate();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePowerNegate();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c26(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePowerNegate();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c27(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePowerNegate();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c28(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePowerNegate();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c29(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePowerNegate();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c29(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePowerNegate();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c30(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePowerNegate();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c31(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNestedScale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 5,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePower();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseNestedScale();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsePower();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseNestedScaleWithNegate();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c26(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePower();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c17;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseNestedScaleWithNegate();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c27(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsePower();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c20;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseNestedScaleWithNegate();\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c28(s1, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsePower();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsePower();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c29(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsePower();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s3 = peg$c15;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parsePowerNegate();\n                      if (s5 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c29(s1, s5);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsePower();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s3 = peg$c17;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parse_();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsePowerNegate();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c30(s1, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsePower();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 37) {\n                        s3 = peg$c20;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parse_();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parsePowerNegate();\n                          if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c31(s1, s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePowerNegate() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 6,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseGroup();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s3 = peg$c32;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c34) {\n            s3 = peg$c34;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePowerNegate();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsePowerNegate();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseGroup();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePower() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 7,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseGroup();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s3 = peg$c32;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c34) {\n            s3 = peg$c34;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePower();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGroup();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNegate() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 8,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c5;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePowerNegate();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c37(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGroup();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseGroup() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 9,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseShift();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c40;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c42(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseShift();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c45;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c46); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c42(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseShift();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s5 = peg$c49;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c50); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c42(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunction();\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var key    = peg$currPos * 18 + 10,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c38;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseComma();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c52(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseValue();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseComma() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 11,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseShift();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c53;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseComma();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseShift();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c56(s1);\n      }\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseValue() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 12,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c57(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumber();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 13,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c59.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c61.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c61.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c62); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 18 + 14,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseFloat();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c65.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c66); }\n      }\n      if (s3 !== peg$FAILED) {\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseInteger();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c69();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 18 + 15,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c70;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 16,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c72.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c73); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c72.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var key    = peg$currPos * 18 + 17,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c75.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c76); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c75.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c76); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n\r\n    const Complex = require('../src/complex');\r\n\r\n    function isComplex(parameter) {\r\n      return parameter instanceof Complex;\r\n    }\r\n\r\n    function cache(value) {\r\n      // look for index of exact match before caching new value\r\n      const index = options.cached.findIndex(cached => cached.equals(value, 0));\r\n\r\n      return isComplex(value) ? 'this[' + (index >= 0 ? index : options.cached.push(value) - 1) + ']' : value;\r\n    }\r\n\r\n    function getFunction(id, parameters, error) {\r\n      const name = id.toLowerCase();\r\n      const canEval = parameters.every(isComplex);\r\n\r\n      if (options.parameters.indexOf(id) >= 0) {\r\n        return id + '(' + parameters.map(cache).join() + ')';\r\n      } else if (Complex.hasOwnProperty(name) && typeof Complex[name] === 'function' && name !== 'constructor') {\r\n        if (Complex[name].length === 1) {\r\n          const parameter = parameters[0];\r\n\r\n          return canEval ? parameter[name]() : parameter + '.' + name + '()';\r\n        }\r\n\r\n        return canEval ? Complex[name].apply(Complex, parameters) : 'Complex.' + name + '(' + parameters.map(cache).join() + ')';\r\n      }\r\n\r\n      error('Expected function but \"' + name + '\" found.');\r\n    }\r\n\r\n    function getValue(id, error) {\r\n      const name = id.toUpperCase();\r\n\r\n      if (options.parameters.indexOf(id) >= 0) {\r\n        return id;\r\n      } else if (Complex.hasOwnProperty(name) && isComplex(Complex[name])) {\r\n        return Complex[name];\r\n      }\r\n\r\n      error('Expected constant or parameter but \"' + id + '\" found.');\r\n    }\r\n\r\n    function getOperation(left, right, operand) {\r\n      if (isComplex(left) && isComplex(right)) {\r\n        return left[operand](right);\r\n      }\r\n\r\n      return cache(left) + '.' + operand + '(' + cache(right) + ')';\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nconst Cartesian = module.exports = function Cartesian(real = 0, imag = 0) {\r\n  if (!(this instanceof Cartesian)) {\r\n    return new Cartesian(real, imag);\r\n  }\r\n\r\n  this.real = real;\r\n  this.imag = imag;\r\n};\r\n\r\nconst mulDescriptor = utils.nonEnumerable(function multiply(that) {\r\n  return new Cartesian(\r\n    this.real * that.real - this.imag * that.imag,\r\n    this.imag * that.real + this.real * that.imag\r\n  );\r\n});\r\nconst divDescriptor = utils.nonEnumerable(function divide(that) {\r\n  const denom = that.real * that.real + that.imag * that.imag;\r\n\r\n  return new Cartesian(\r\n    (this.real * that.real + this.imag * that.imag) / denom,\r\n    (this.imag * that.real - this.real * that.imag) / denom\r\n  );\r\n});\r\n\r\nObject.defineProperties(Cartesian, {\r\n  ZERO:    utils.nonEnumerable(new Cartesian(0, 0)),\r\n  ONE:     utils.nonEnumerable(new Cartesian(1, 0)),\r\n  NEG_ONE: utils.nonEnumerable(new Cartesian(-1, 0)),\r\n  I:       utils.nonEnumerable(new Cartesian(0, 1)),\r\n  NEG_I:   utils.nonEnumerable(new Cartesian(0, -1)),\r\n  TWO:     utils.nonEnumerable(new Cartesian(2, 0)),\r\n  TWO_I:   utils.nonEnumerable(new Cartesian(0, 2)),\r\n  PI:      utils.nonEnumerable(new Cartesian(Math.PI, 0)),\r\n  E:       utils.nonEnumerable(new Cartesian(Math.E, 0)),\r\n});\r\n\r\nCartesian.prototype = Object.create(require('./complex').prototype, {\r\n  constructor: utils.nonEnumerable(Cartesian),\r\n  abs: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.abs = utils.hypot(this.real, this.imag);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'abs', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  arg: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      const arg = Math.atan2(this.imag, this.real);\r\n\r\n      return this.arg = arg !== 0 ? -((-arg + Math.PI) % (Math.PI * 2) - Math.PI) : 0;\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'arg', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  multiply: mulDescriptor,\r\n  times:    mulDescriptor,\r\n  mul:      mulDescriptor,\r\n  '*':      mulDescriptor,\r\n  divide:   divDescriptor,\r\n  div:      divDescriptor,\r\n  '/':      divDescriptor,\r\n  isFinite: utils.nonEnumerable(function isFinite() {\r\n    return utils.isFinite(this.real) && utils.isFinite(this.imag);\r\n  }),\r\n  isNaN: utils.nonEnumerable(function isNaN() {\r\n    return utils.isNaN(this.real) || utils.isNaN(this.imag);\r\n  }),\r\n  negate: utils.nonEnumerable(function negate() {\r\n    return new Cartesian(-this.real, -this.imag);\r\n  }),\r\n  conjugate: utils.nonEnumerable(function conjugate() {\r\n    return new Cartesian(this.real, -this.imag);\r\n  }),\r\n  normalize: utils.nonEnumerable(function normalize() {\r\n    return new Cartesian(this.real / this.abs, this.imag / this.abs);\r\n  }),\r\n  square: utils.nonEnumerable(function square() {\r\n    return new Cartesian(\r\n      this.real * this.real - this.imag * this.imag,\r\n      this.real * this.imag * 2\r\n    );\r\n  }),\r\n  cube: utils.nonEnumerable(function cube() {\r\n    return new Cartesian(\r\n      this.real * (this.real * this.real - this.imag * this.imag * 3),\r\n      this.imag * (this.real * this.real * 3 - this.imag * this.imag)\r\n    );\r\n  }),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst parser = require('../parser');\r\nconst utils = require('./utils');\r\n\r\nconst Complex = module.exports = function Complex(real = 0, imag = 0, abs = utils.hypot(real, imag), arg = Math.atan2(imag, real)) {\r\n  if (!(this instanceof Complex)) {\r\n    return new Complex(real, imag, abs, arg);\r\n  }\r\n\r\n  this.real = real;\r\n  this.imag = imag;\r\n  this.abs  = abs >= 0 ? abs : -abs;\r\n  this.arg  = arg !== 0 ? -((-arg + (abs >= 0 ? Math.PI : 0)) % (Math.PI * 2) - Math.PI) : abs < 0 ? Math.PI : 0;\r\n};\r\n\r\nconst Cartesian = require('./cartesian');\r\nconst Polar = require('./polar');\r\nconst Long = require('./long');\r\n\r\nObject.defineProperties(Complex, {\r\n  // polymorphic static calls to inherited member methods\r\n  isFinite: utils.nonEnumerable(function isFinite(complex) {\r\n    return complex.isFinite();\r\n  }),\r\n  isNaN: utils.nonEnumerable(function isNaN(complex) {\r\n    return complex.isNaN();\r\n  }),\r\n  isReal: utils.nonEnumerable(function isReal(complex) {\r\n    return complex.isReal();\r\n  }),\r\n  isImag: utils.nonEnumerable(function isImag(complex) {\r\n    return complex.isImag();\r\n  }),\r\n  negate: utils.nonEnumerable(function negate(complex) {\r\n    return complex.negate();\r\n  }),\r\n  conjugate: utils.nonEnumerable(function conjugate(complex) {\r\n    return complex.conjugate();\r\n  }),\r\n  normalize: utils.nonEnumerable(function normalize(complex) {\r\n    return complex.normalize();\r\n  }),\r\n  square: utils.nonEnumerable(function square(complex) {\r\n    return complex.square();\r\n  }),\r\n  cube: utils.nonEnumerable(function cube(complex) {\r\n    return complex.cube();\r\n  }),\r\n  // static methods\r\n  sign: utils.nonEnumerable(function sign(complex) {\r\n    return new Cartesian(utils.sign(complex.real), utils.sign(complex.imag));\r\n  }),\r\n  floor: utils.nonEnumerable(function floor(complex) {\r\n    return new Cartesian(utils.floor(complex.real), utils.floor(complex.imag));\r\n  }),\r\n  ceil: utils.nonEnumerable(function ceil(complex) {\r\n    return new Cartesian(utils.ceil(complex.real), utils.ceil(complex.imag));\r\n  }),\r\n  round: utils.nonEnumerable(function round(complex) {\r\n    return new Cartesian(utils.round(complex.real), utils.round(complex.imag));\r\n  }),\r\n  truncate: utils.nonEnumerable(function truncate(complex) {\r\n    return new Cartesian(utils.truncate(complex.real), utils.truncate(complex.imag));\r\n  }),\r\n  fraction: utils.nonEnumerable(function fraction(complex) {\r\n    return new Cartesian(complex.real % 1, complex.imag % 1);\r\n  }),\r\n  sqrt: utils.nonEnumerable(function sqrt(complex) {\r\n    return new Polar(\r\n      Math.sqrt(complex.abs),\r\n      complex.arg * 0.5\r\n    );\r\n  }),\r\n  cbrt: utils.nonEnumerable(function cbrt(complex) {\r\n    return new Polar(\r\n      Math.pow(complex.abs, 1 / 3),\r\n      complex.arg / 3\r\n    );\r\n  }),\r\n  exp: utils.nonEnumerable(function exp(complex) {\r\n    return new Polar(\r\n      Math.exp(complex.real),\r\n      complex.imag\r\n    );\r\n  }),\r\n  log: utils.nonEnumerable(function log(complex) {\r\n    return new Cartesian(\r\n      Math.log(complex.abs),\r\n      complex.arg\r\n    );\r\n  }),\r\n  cos: utils.nonEnumerable(function cos(complex) {\r\n    return new Cartesian(\r\n      Math.cos(complex.real) * utils.cosh(complex.imag),\r\n      -Math.sin(complex.real) * utils.sinh(complex.imag)\r\n    );\r\n  }),\r\n  sin: utils.nonEnumerable(function sin(complex) {\r\n    return new Cartesian(\r\n      Math.sin(complex.real) * utils.cosh(complex.imag),\r\n      Math.cos(complex.real) * utils.sinh(complex.imag)\r\n    );\r\n  }),\r\n  tan: utils.nonEnumerable(function tan(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(real2) + utils.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sin(real2) / denom,\r\n      utils.sinh(imag2) / denom\r\n    );\r\n  }),\r\n  sec: utils.nonEnumerable(function sec(complex) {\r\n    const denom = Math.cos(complex.real * 2) + utils.cosh(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cos(complex.real) * utils.cosh(complex.imag) * 2 / denom,\r\n      Math.sin(complex.real) * utils.sinh(complex.real) * 2 / denom\r\n    );\r\n  }),\r\n  csc: utils.nonEnumerable(function csc(complex) {\r\n    const denom = Math.cos(complex.real * 2) - utils.cosh(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(complex.real) * utils.cosh(complex.imag) * 2 / denom,\r\n      Math.cos(complex.real) * utils.sinh(complex.imag) * 2 / denom\r\n    );\r\n  }),\r\n  cot: utils.nonEnumerable(function cot(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(real2) - utils.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(real2) / denom,\r\n      utils.sinh(imag2) / denom\r\n    );\r\n  }),\r\n  cosh: utils.nonEnumerable(function cosh(complex) {\r\n    return new Cartesian(\r\n      utils.cosh(complex.real) * Math.cos(complex.imag),\r\n      utils.sinh(complex.real) * Math.sin(complex.imag)\r\n    );\r\n  }),\r\n  sinh: utils.nonEnumerable(function sinh(complex) {\r\n    return new Cartesian(\r\n      utils.sinh(complex.real) * Math.cos(complex.imag),\r\n      utils.cosh(complex.real) * Math.sin(complex.imag)\r\n    );\r\n  }),\r\n  tanh: utils.nonEnumerable(function tanh(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = utils.cosh(real2) + Math.cos(imag2);\r\n\r\n    return new Cartesian(\r\n      utils.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }),\r\n  sech: utils.nonEnumerable(function sech(complex) {\r\n    const denom = utils.cosh(complex.real * 2) + Math.cos(complex.imag * 2);\r\n\r\n    return new Cartesian(\r\n      utils.cosh(complex.real) * Math.cos(complex.imag) * 2 / denom,\r\n      -utils.sinh(complex.real) * Math.sin(complex.real) * 2 / denom\r\n    );\r\n  }),\r\n  csch: utils.nonEnumerable(function csch(complex) {\r\n    const denom = Math.cos(complex.imag * 2) - utils.cosh(complex.real * 2);\r\n\r\n    return new Cartesian(\r\n      -utils.sinh(complex.real) * Math.cos(complex.imag) * 2 / denom,\r\n      utils.cosh(complex.real) * Math.sin(complex.imag) * 2 / denom\r\n    );\r\n  }),\r\n  coth: utils.nonEnumerable(function coth(complex) {\r\n    const real2 = complex.real * 2;\r\n    const imag2 = complex.imag * 2;\r\n    const denom = Math.cos(imag2) - utils.cosh(real2);\r\n\r\n    return new Cartesian(\r\n      -utils.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }),\r\n  acos: utils.nonEnumerable(function acos(complex) {\r\n    // -i log(z+sqrt(z^2-1))\r\n    return complex.square().sub(Complex.ONE).sqrt().add(complex).log().mul(Complex.NEG_I);\r\n  }),\r\n  asin: utils.nonEnumerable(function asin(complex) {\r\n    // -i log(iz+sqrt(1-z^2))\r\n    return Complex.ONE.sub(complex.square()).sqrt().add(complex.mul(Complex.I)).log().mul(Complex.NEG_I);\r\n  }),\r\n  atan: utils.nonEnumerable(function atan(complex) {\r\n    const iz = Cartesian.I.mul(complex);\r\n    // i/2 (log(1-iz)-log(1+iz))\r\n    return Complex.ONE.sub(iz).log().sub(iz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }),\r\n  asec: utils.nonEnumerable(function asec(complex) {\r\n    return Cartesian.ONE.div(complex).acos();\r\n  }),\r\n  acsc: utils.nonEnumerable(function acsc(complex) {\r\n    return Cartesian.ONE.div(complex).asin();\r\n  }),\r\n  acot: utils.nonEnumerable(function acot(complex) {\r\n    const idz = Cartesian.I.div(complex);\r\n    // i/2 (log(1-i/z)-log(1+i/z))\r\n    return Complex.ONE.sub(idz).log().sub(idz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }),\r\n  acosh: utils.nonEnumerable(function acosh(complex) {\r\n    // log(z+sqrt(z^2-1))\r\n    return complex.square().sub(Complex.ONE).sqrt().add(complex).log();\r\n  }),\r\n  asinh: utils.nonEnumerable(function asinh(complex) {\r\n    // log(z+sqrt(z^2+1))\r\n    return complex.square().add(Complex.ONE).sqrt().add(complex).log();\r\n  }),\r\n  atanh: utils.nonEnumerable(function atanh(complex) {\r\n    // log((1+z)/(1-z))/2\r\n    return complex.add(Complex.ONE).div(Complex.ONE.sub(complex)).log().div(Complex.TWO);\r\n  }),\r\n  asech: utils.nonEnumerable(function asech(complex) {\r\n    return Cartesian.ONE.div(complex).acosh();\r\n  }),\r\n  acsch: utils.nonEnumerable(function acsch(complex) {\r\n    return Cartesian.ONE.div(complex).asinh();\r\n  }),\r\n  acoth: utils.nonEnumerable(function acoth(complex) {\r\n    // log((z+1)/(z-1))/2\r\n    return complex.add(Complex.ONE).div(complex.sub(Complex.ONE)).log().div(Complex.TWO);\r\n  }),\r\n  min: utils.nonEnumerable(function min() {\r\n    var minimum = new Complex(Infinity, 0, Infinity, 0);\r\n\r\n    for (var index = 0; index < arguments.length; index++) {\r\n      if (arguments[index].abs < minimum.abs) {\r\n        minimum = arguments[index];\r\n      }\r\n    }\r\n\r\n    return minimum;\r\n  }),\r\n  max: utils.nonEnumerable(function max() {\r\n    var maximum = Complex.ZERO;\r\n\r\n    for (var index = 0; index < arguments.length; index++) {\r\n      if (arguments[index].abs > maximum.abs) {\r\n        maximum = arguments[index];\r\n      }\r\n    }\r\n\r\n    return maximum;\r\n  }),\r\n  compile: utils.nonEnumerable(function compile(string, parameters = []) {\r\n    const cached = [];\r\n    const result = parser.parse(string, {parameters, cached});\r\n\r\n    parameters.unshift('Complex');\r\n\r\n    return new Function(parameters.join(), 'return ' + result).bind(cached, Complex);\r\n  }),\r\n});\r\n\r\nconst equDescriptor = utils.nonEnumerable(function equals(that, maxUlps = 4) {\r\n  return (\r\n    Long.withinMaxUlps(this.real, that.real, maxUlps) && Long.withinMaxUlps(this.imag, that.imag, maxUlps) ||\r\n    Long.withinMaxUlps(this.abs, that.abs, maxUlps) && Long.withinMaxUlps(this.arg, that.arg, maxUlps)\r\n  );\r\n});\r\nconst addDescriptor = utils.nonEnumerable(function add(that) {\r\n  return new Cartesian(this.real + that.real, this.imag + that.imag);\r\n});\r\nconst subDescriptor = utils.nonEnumerable(function subtract(that) {\r\n  return new Cartesian(this.real - that.real, this.imag - that.imag);\r\n});\r\nconst mulDescriptor = utils.nonEnumerable(function multiply(that) {\r\n  return new Complex(\r\n    this.real * that.real - this.imag * that.imag,\r\n    this.imag * that.real + this.real * that.imag,\r\n    this.abs * that.abs, this.arg + that.arg\r\n  );\r\n});\r\nconst divDescriptor = utils.nonEnumerable(function divide(that) {\r\n  const denom = that.real * that.real + that.imag * that.imag;\r\n\r\n  return new Complex(\r\n    (this.real * that.real + this.imag * that.imag) / denom,\r\n    (this.imag * that.real - this.real * that.imag) / denom,\r\n    this.abs / that.abs, this.arg - that.arg\r\n  );\r\n});\r\nconst modDescriptor = utils.nonEnumerable(function modulo(that) {\r\n  return new Cartesian(this.real % that.real, this.imag % that.imag);\r\n});\r\nconst powDescriptor = utils.nonEnumerable(function power(that) {\r\n  return new Polar(\r\n    Math.pow(this.abs, that.real) * Math.exp(-that.imag * this.arg),\r\n    that.imag * Math.log(this.abs) + that.real * this.arg\r\n  );\r\n});\r\n\r\nObject.defineProperties(Complex, {\r\n  Cartesian: utils.nonEnumerable(Cartesian),\r\n  Polar:     utils.nonEnumerable(Polar),\r\n  ZERO:      utils.nonEnumerable(new Complex(0, 0, 0, 0)),\r\n  ONE:       utils.nonEnumerable(new Complex(1, 0, 1, 0)),\r\n  NEG_ONE:   utils.nonEnumerable(new Complex(-1, 0, 1, Math.PI)),\r\n  I:         utils.nonEnumerable(new Complex(0, 1, 1, Math.PI / 2)),\r\n  NEG_I:     utils.nonEnumerable(new Complex(0, -1, 1, -Math.PI / 2)),\r\n  TWO:       utils.nonEnumerable(new Complex(2, 0, 2, 0)),\r\n  TWO_I:     utils.nonEnumerable(new Complex(0, 2, 2, Math.PI / 2)),\r\n  PI:        utils.nonEnumerable(new Complex(Math.PI, 0, Math.PI, 0)),\r\n  E:         utils.nonEnumerable(new Complex(Math.E, 0, Math.E, 0)),\r\n});\r\n\r\nObject.defineProperties(Complex.prototype, {\r\n  // member methods\r\n  toString: utils.nonEnumerable(function toString(polar) {\r\n    let string = '';\r\n\r\n    if (!polar) {\r\n      const real = this.real.toPrecision();\r\n      const imag = this.imag.toPrecision();\r\n\r\n      if (this.real !== 0 || this.imag === 0) {\r\n        string += real;\r\n      }\r\n\r\n      if (this.imag !== 0) {\r\n        if (this.real !== 0 && this.imag > 0) {\r\n          string += '+';\r\n        }\r\n\r\n        string += this.imag === 1 ? 'i' : this.imag === -1 ? '-i' : imag + 'i';\r\n      }\r\n    } else {\r\n      const abs = this.abs.toPrecision();\r\n      const arg = this.arg.toPrecision();\r\n\r\n      string = abs;\r\n\r\n      if (this.abs !== 0 && this.arg !== 0) {\r\n        string += `*e^(${arg}i)`;\r\n      }\r\n    }\r\n\r\n    return string;\r\n  }),\r\n  equals:   equDescriptor,\r\n  equ:      equDescriptor,\r\n  '=':      equDescriptor,\r\n  add:      addDescriptor,\r\n  plus:     addDescriptor,\r\n  '+':      addDescriptor,\r\n  subtract: subDescriptor,\r\n  minus:    subDescriptor,\r\n  sub:      subDescriptor,\r\n  '-':      subDescriptor,\r\n  multiply: mulDescriptor,\r\n  times:    mulDescriptor,\r\n  mul:      mulDescriptor,\r\n  '*':      mulDescriptor,\r\n  divide:   divDescriptor,\r\n  div:      divDescriptor,\r\n  '/':      divDescriptor,\r\n  modulo:   modDescriptor,\r\n  mod:      modDescriptor,\r\n  '%':      modDescriptor,\r\n  power:    powDescriptor,\r\n  pow:      powDescriptor,\r\n  '^':      powDescriptor,\r\n  '**':     powDescriptor,\r\n  // member methods for static functions\r\n  isFinite: utils.nonEnumerable(function isFinite() {\r\n    return utils.isFinite(this.abs);\r\n  }),\r\n  isNaN: utils.nonEnumerable(function isNaN() {\r\n    return utils.isNaN(this.abs) || utils.isNaN(this.arg);\r\n  }),\r\n  isReal: utils.nonEnumerable(function isReal() {\r\n    return (\r\n      this.imag <= utils.EPSILON && -this.imag <= utils.EPSILON ||\r\n      this.arg <= utils.EPSILON && -this.arg <= utils.EPSILON ||\r\n      Long.withinMaxUlps(this.arg, Math.PI)\r\n    );\r\n  }),\r\n  isImag: utils.nonEnumerable(function isImag() {\r\n    return (\r\n      this.real <= utils.EPSILON && -this.real <= utils.EPSILON ||\r\n      Long.withinMaxUlps(this.arg < 0 ? -this.arg : this.arg, Math.PI / 2)\r\n    );\r\n  }),\r\n  negate: utils.nonEnumerable(function negate() {\r\n    return new Complex(-this.real, -this.imag, -this.abs, this.arg);\r\n  }),\r\n  conjugate: utils.nonEnumerable(function conjugate() {\r\n    return new Complex(this.real, -this.imag, this.abs, -this.arg);\r\n  }),\r\n  normalize: utils.nonEnumerable(function normalize() {\r\n    return new Complex(\r\n      this.real / this.abs,\r\n      this.imag / this.abs,\r\n      this.abs / this.abs,\r\n      this.arg\r\n    );\r\n  }),\r\n  square: utils.nonEnumerable(function square() {\r\n    return new Complex(\r\n      this.real * this.real - this.imag * this.imag,\r\n      this.real * this.imag * 2,\r\n      this.abs * this.abs,\r\n      this.arg * 2\r\n    );\r\n  }),\r\n  cube: utils.nonEnumerable(function cube() {\r\n    return new Complex(\r\n      this.real * (this.real * this.real - this.imag * this.imag * 3),\r\n      this.imag * (this.real * this.real * 3 - this.imag * this.imag),\r\n      this.abs * this.abs * this.abs, this.arg * 3\r\n    );\r\n  }),\r\n  sign: utils.nonEnumerable(function sign() {\r\n    return new Cartesian(utils.sign(this.real), utils.sign(this.imag));\r\n  }),\r\n  floor: utils.nonEnumerable(function floor() {\r\n    return new Cartesian(utils.floor(this.real), utils.floor(this.imag));\r\n  }),\r\n  ceil: utils.nonEnumerable(function ceil() {\r\n    return new Cartesian(utils.ceil(this.real), utils.ceil(this.imag));\r\n  }),\r\n  round: utils.nonEnumerable(function round() {\r\n    return new Cartesian(utils.round(this.real), utils.round(this.imag));\r\n  }),\r\n  truncate: utils.nonEnumerable(function truncate() {\r\n    return new Cartesian(utils.truncate(this.real), utils.truncate(this.imag));\r\n  }),\r\n  fraction: utils.nonEnumerable(function fraction() {\r\n    return new Cartesian(this.real % 1, this.imag % 1);\r\n  }),\r\n  sqrt: utils.nonEnumerable(function sqrt() {\r\n    return new Polar(\r\n      Math.sqrt(this.abs),\r\n      this.arg * 0.5\r\n    );\r\n  }),\r\n  cbrt: utils.nonEnumerable(function cbrt() {\r\n    return new Polar(\r\n      Math.pow(this.abs, 1 / 3),\r\n      this.arg / 3\r\n    );\r\n  }),\r\n  exp: utils.nonEnumerable(function exp() {\r\n    return new Polar(\r\n      Math.exp(this.real),\r\n      this.imag\r\n    );\r\n  }),\r\n  log: utils.nonEnumerable(function log() {\r\n    return new Cartesian(\r\n      Math.log(this.abs),\r\n      this.arg\r\n    );\r\n  }),\r\n  cos: utils.nonEnumerable(function cos() {\r\n    return new Cartesian(\r\n      Math.cos(this.real) * utils.cosh(this.imag),\r\n      -Math.sin(this.real) * utils.sinh(this.imag)\r\n    );\r\n  }),\r\n  sin: utils.nonEnumerable(function sin() {\r\n    return new Cartesian(\r\n      Math.sin(this.real) * utils.cosh(this.imag),\r\n      Math.cos(this.real) * utils.sinh(this.imag)\r\n    );\r\n  }),\r\n  tan: utils.nonEnumerable(function tan() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(real2) + utils.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      Math.sin(real2) / denom,\r\n      utils.sinh(imag2) / denom\r\n    );\r\n  }),\r\n  sec: utils.nonEnumerable(function sec() {\r\n    const denom = Math.cos(this.real * 2) + utils.cosh(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      Math.cos(this.real) * utils.cosh(this.imag) * 2 / denom,\r\n      Math.sin(this.real) * utils.sinh(this.real) * 2 / denom\r\n    );\r\n  }),\r\n  csc: utils.nonEnumerable(function csc() {\r\n    const denom = Math.cos(this.real * 2) - utils.cosh(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(this.real) * utils.cosh(this.imag) * 2 / denom,\r\n      Math.cos(this.real) * utils.sinh(this.imag) * 2 / denom\r\n    );\r\n  }),\r\n  cot: utils.nonEnumerable(function cot() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(real2) - utils.cosh(imag2);\r\n\r\n    return new Cartesian(\r\n      -Math.sin(real2) / denom,\r\n      utils.sinh(imag2) / denom\r\n    );\r\n  }),\r\n  cosh: utils.nonEnumerable(function cosh() {\r\n    return new Cartesian(\r\n      utils.cosh(this.real) * Math.cos(this.imag),\r\n      utils.sinh(this.real) * Math.sin(this.imag)\r\n    );\r\n  }),\r\n  sinh: utils.nonEnumerable(function sinh() {\r\n    return new Cartesian(\r\n      utils.sinh(this.real) * Math.cos(this.imag),\r\n      utils.cosh(this.real) * Math.sin(this.imag)\r\n    );\r\n  }),\r\n  tanh: utils.nonEnumerable(function tanh() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = utils.cosh(real2) + Math.cos(imag2);\r\n\r\n    return new Cartesian(\r\n      utils.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }),\r\n  sech: utils.nonEnumerable(function sech() {\r\n    const denom = utils.cosh(this.real * 2) + Math.cos(this.imag * 2);\r\n\r\n    return new Cartesian(\r\n      utils.cosh(this.real) * Math.cos(this.imag) * 2 / denom,\r\n      -utils.sinh(this.real) * Math.sin(this.real) * 2 / denom\r\n    );\r\n  }),\r\n  csch: utils.nonEnumerable(function csch() {\r\n    const denom = Math.cos(this.imag * 2) - utils.cosh(this.real * 2);\r\n\r\n    return new Cartesian(\r\n      -utils.sinh(this.real) * Math.cos(this.imag) * 2 / denom,\r\n      utils.cosh(this.real) * Math.sin(this.imag) * 2 / denom\r\n    );\r\n  }),\r\n  coth: utils.nonEnumerable(function coth() {\r\n    const real2 = this.real * 2;\r\n    const imag2 = this.imag * 2;\r\n    const denom = Math.cos(imag2) - utils.cosh(real2);\r\n\r\n    return new Cartesian(\r\n      -utils.sinh(real2) / denom,\r\n      Math.sin(imag2) / denom\r\n    );\r\n  }),\r\n  acos: utils.nonEnumerable(function acos() {\r\n    // -i log(z+sqrt(z^2-1))\r\n    return this.square().sub(Complex.ONE).sqrt().add(this).log().mul(Complex.NEG_I);\r\n  }),\r\n  asin: utils.nonEnumerable(function asin() {\r\n    // -i log(iz+sqrt(1-z^2))\r\n    return Complex.ONE.sub(this.square()).sqrt().add(this.mul(Complex.I)).log().mul(Complex.NEG_I);\r\n  }),\r\n  atan: utils.nonEnumerable(function atan() {\r\n    const iz = this.mul(Complex.I);\r\n    // i/2 (log(1-iz)-log(1+iz))\r\n    return Complex.ONE.sub(iz).log().sub(iz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }),\r\n  asec: utils.nonEnumerable(function asec() {\r\n    return Cartesian.ONE.div(this).acos();\r\n  }),\r\n  acsc: utils.nonEnumerable(function acsc() {\r\n    return Cartesian.ONE.div(this).asin();\r\n  }),\r\n  acot: utils.nonEnumerable(function acot() {\r\n    const idz = Complex.I.div(this);\r\n    // i/2 (log(1-i/z)-log(1+i/z))\r\n    return Complex.ONE.sub(idz).log().sub(idz.add(Complex.ONE).log()).div(Complex.TWO_I);\r\n  }),\r\n  acosh: utils.nonEnumerable(function acosh() {\r\n    // log(z+sqrt(z^2-1))\r\n    return this.square().sub(Complex.ONE).sqrt().add(this).log();\r\n  }),\r\n  asinh: utils.nonEnumerable(function asinh() {\r\n    // log(z+sqrt(z^2+1))\r\n    return this.square().add(Complex.ONE).sqrt().add(this).log();\r\n  }),\r\n  atanh: utils.nonEnumerable(function atanh() {\r\n    // log((1+z)/(1-z))/2\r\n    return this.add(Complex.ONE).div(Complex.ONE.sub(this)).log().div(Complex.TWO);\r\n  }),\r\n  asech: utils.nonEnumerable(function asech() {\r\n    return Cartesian.ONE.div(this).acosh();\r\n  }),\r\n  acsch: utils.nonEnumerable(function acsch() {\r\n    return Cartesian.ONE.div(this).asinh();\r\n  }),\r\n  acoth: utils.nonEnumerable(function acoth() {\r\n    // log((z+1)/(z-1))/2\r\n    return this.add(Complex.ONE).div(this.sub(Complex.ONE)).log().div(Complex.TWO);\r\n  }),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nconst Long = module.exports = class Long {\r\n  // bound float64Array and uint16Array\r\n  // access same arrayBuffer\r\n  static fromFloat64(float64Array, uint16Array, value) {\r\n    // protects against -0\r\n    float64Array[0] = value === 0 ? 0 : value;\r\n\r\n    // little endian encoding assumed\r\n    return new Long(uint16Array[3], uint16Array[2], uint16Array[1], uint16Array[0]);\r\n  }\r\n\r\n  static withinMaxUlps(a, b, maxUlps = 4) {\r\n    // covers +-Infinity and NaN\r\n    if (!utils.isFinite(a) || !utils.isFinite(b)) {\r\n      return +a === +b;\r\n    }\r\n\r\n    const {hi, lo} = Long.fromFloat64(+a).sub(Long.fromFloat64(+b));\r\n\r\n    return hi === 0 && lo <= maxUlps || ~hi === 0 && -lo <= maxUlps;\r\n  }\r\n\r\n  constructor(u48, u32, u16, u00) {\r\n    this.u48 = u48;\r\n    this.u32 = u32;\r\n    this.u16 = u16;\r\n    this.u00 = u00;\r\n  }\r\n\r\n  get hi() {\r\n    return (this.u48 << 16) | this.u32;\r\n  }\r\n\r\n  get lo() {\r\n    return (this.u16 << 16) | this.u00;\r\n  }\r\n\r\n  set hi(int32) {\r\n    this.u48 = int32 >>> 16;\r\n    this.u32 = int32 & 0xFFFF;\r\n\r\n    return this.hi;\r\n  }\r\n\r\n  set lo(int32) {\r\n    this.u16 = int32 >>> 16;\r\n    this.u00 = int32 & 0xFFFF;\r\n\r\n    return this.lo;\r\n  }\r\n\r\n  negate() {\r\n    this.hi = ~this.hi;\r\n    this.lo = ~this.lo;\r\n\r\n    return this;\r\n  }\r\n\r\n  add(that) {\r\n    let u48, u32, u16, u00;\r\n\r\n    u00 = this.u00 + that.u00;\r\n    u16 = u00 >>> 16;\r\n    u00 &= 0xFFFF;\r\n    u16 += this.u16 + that.u16;\r\n    u32 = u16 >>> 16;\r\n    u16 &= 0xFFFF;\r\n    u32 += this.u32 + that.u32;\r\n    u48 = u32 >>> 16;\r\n    u32 &= 0xFFFF;\r\n    u48 += this.u48 + that.u48;\r\n    u48 &= 0xFFFF;\r\n\r\n    this.u48 = u48;\r\n    this.u32 = u32;\r\n    this.u16 = u16;\r\n    this.u00 = u00;\r\n\r\n    return this;\r\n  }\r\n\r\n  sub(that) {\r\n    return this.add(that.negate().add(Long.ONE));\r\n  }\r\n};\r\n\r\nconst arrayBuffer = new ArrayBuffer(8);\r\n\r\nObject.defineProperties(Long, {\r\n  fromFloat64: utils.nonEnumerable(\r\n    Long.fromFloat64.bind(Long, new Float64Array(arrayBuffer), new Uint16Array(arrayBuffer))\r\n  ),\r\n  ONE: utils.nonEnumerable(\r\n    new Long(0x0000, 0x0000, 0x0000, 0x0001)\r\n  ),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nconst utils = require('./utils');\r\nconst Long = require('./long');\r\n\r\nconst Polar = module.exports = function Polar(abs = 0, arg = 0) {\r\n  if (!(this instanceof Polar)) {\r\n    return new Polar(abs, arg);\r\n  }\r\n\r\n  this.abs = abs >= 0 ? abs : -abs;\r\n  this.arg = arg !== 0 ? -((-arg + (abs >= 0 ? Math.PI : 0)) % (Math.PI * 2) - Math.PI) : abs < 0 ? Math.PI : 0;\r\n};\r\n\r\nconst equDescriptor = utils.nonEnumerable(function equals(that, maxUlps = 4) {\r\n  return (\r\n    Long.withinMaxUlps(this.abs, that.abs, maxUlps) && Long.withinMaxUlps(this.arg, that.arg, maxUlps) ||\r\n    Long.withinMaxUlps(this.real, that.real, maxUlps) && Long.withinMaxUlps(this.imag, that.imag, maxUlps)\r\n  );\r\n});\r\nconst mulDescriptor = utils.nonEnumerable(function multiply(that) {\r\n  return new Polar(this.abs * that.abs, this.arg + that.arg);\r\n});\r\nconst divDescriptor = utils.nonEnumerable(function divide(that) {\r\n  return new Polar(this.abs / that.abs, this.arg - that.arg);\r\n});\r\n\r\nObject.defineProperties(Polar, {\r\n  ZERO:    utils.nonEnumerable(new Polar(0, 0)),\r\n  ONE:     utils.nonEnumerable(new Polar(1, 0)),\r\n  NEG_ONE: utils.nonEnumerable(new Polar(1, Math.PI)),\r\n  I:       utils.nonEnumerable(new Polar(1, Math.PI / 2)),\r\n  NEG_I:   utils.nonEnumerable(new Polar(1, -Math.PI / 2)),\r\n  TWO:     utils.nonEnumerable(new Polar(2, 0)),\r\n  TWO_I:   utils.nonEnumerable(new Polar(2, Math.PI / 2)),\r\n  PI:      utils.nonEnumerable(new Polar(Math.PI, 0)),\r\n  E:       utils.nonEnumerable(new Polar(Math.E, 0)),\r\n});\r\n\r\nPolar.prototype = Object.create(require('./complex').prototype, {\r\n  constructor: utils.nonEnumerable(Polar),\r\n  real: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.real = this.abs * Math.cos(this.arg);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'real', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  imag: {\r\n    configurable: true,\r\n    enumerable: true,\r\n    get() {\r\n      return this.imag = this.abs * Math.sin(this.arg);\r\n    },\r\n    set(value) {\r\n      Object.defineProperty(this, 'imag', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true,\r\n      });\r\n\r\n      return value;\r\n    },\r\n  },\r\n  equals:   equDescriptor,\r\n  equ:      equDescriptor,\r\n  '=':      equDescriptor,\r\n  multiply: mulDescriptor,\r\n  times:    mulDescriptor,\r\n  mul:      mulDescriptor,\r\n  '*':      mulDescriptor,\r\n  divide:   divDescriptor,\r\n  div:      divDescriptor,\r\n  '/':      divDescriptor,\r\n  isReal: utils.nonEnumerable(function isReal() {\r\n    return (\r\n      this.arg <= utils.EPSILON && -this.arg <= utils.EPSILON ||\r\n      Long.withinMaxUlps(this.arg, Math.PI) ||\r\n      this.imag <= utils.EPSILON && -this.imag <= utils.EPSILON\r\n    );\r\n  }),\r\n  isImag: utils.nonEnumerable(function isImag() {\r\n    return (\r\n      Long.withinMaxUlps(this.arg < 0 ? -this.arg : this.arg, Math.PI / 2) ||\r\n      this.real <= utils.EPSILON && -this.real <= utils.EPSILON\r\n    );\r\n  }),\r\n  negate: utils.nonEnumerable(function negate() {\r\n    return new Polar(-this.abs, this.arg);\r\n  }),\r\n  conjugate: utils.nonEnumerable(function conjugate() {\r\n    return new Polar(this.abs, -this.arg);\r\n  }),\r\n  normalize: utils.nonEnumerable(function normalize() {\r\n    return new Polar(this.abs / this.abs, this.arg);\r\n  }),\r\n  square: utils.nonEnumerable(function square() {\r\n    return new Polar(this.abs * this.abs, this.arg * 2);\r\n  }),\r\n  cube: utils.nonEnumerable(function cube() {\r\n    return new Polar(this.abs * this.abs * this.abs, this.arg * 3);\r\n  }),\r\n});\r\n","/* Copyright (c) 2017 Patrick Roberts */\r\n\r\n'use strict';\r\n\r\nmodule.exports = {\r\n  nonEnumerable(value) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value,\r\n      writable: true,\r\n    };\r\n  },\r\n  isFinite: global.isFinite,\r\n  isNaN: global.isNaN,\r\n  floor: Math.floor,\r\n  ceil: Math.ceil,\r\n  round: Math.round,\r\n  sign: Math.sign || function sign(number) {\r\n    return number > 0 ? 1 : number < 0 ? -1 : number == 0 ? 0 : NaN;\r\n  },\r\n  truncate: Math.trunc || function truncate(number) {\r\n    return number - (number % 1);\r\n  },\r\n  hypot: Math.hypot || function hypot(a, b) {\r\n    return Math.sqrt(a * a + b * b);\r\n  },\r\n  cosh: Math.cosh || function cosh(number) {\r\n    const exp = Math.exp(number);\r\n\r\n    return (exp + 1 / exp) / 2;\r\n  },\r\n  sinh: Math.sinh || function sinh(number) {\r\n    const exp = Math.exp(number);\r\n\r\n    return (exp - 1 / exp) / 2;\r\n  },\r\n  EPSILON: Number.EPSILON || 2.220446049250313e-16,\r\n};\r\n"]}